{"version":3,"sources":["Form.jsx","Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["stopEnterOnKeyDown","e","keyCode","preventDefault","getName","player","firstName","lastName","columns","SelectColumn","key","name","sortable","rookieColumns","Form","props","useState","setFirstName","firstError","setFirstError","setLastName","lastError","setLastError","email","setEmail","emailError","setEmailError","teamName","setTeamName","teamNameError","setTeamNameError","Set","players","setPlayers","rookies","setRookies","playerError","setPlayerError","selectedTotal","useMemo","tds","Array","from","playerId","playerJSON","td","className","onKeyDown","TextField","required","label","value","onChange","target","error","helperText","rows","rowKeyGetter","row","id","selectedRows","onSelectedRowsChange","rookieJSON","Button","variant","color","onClick","size","myHeaders","Headers","append","playerArray","rookieArray","urlencoded","URLSearchParams","fetch","method","headers","body","redirect","mode","credentials","then","response","text","result","console","log","setSubmitted","catch","Home","submitted","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fee40c19.chunk.js","sourcesContent":["import TextField from '@material-ui/core/TextField';\r\nimport {useState, useMemo} from 'react'\r\nimport './Form.css'\r\nimport playerJSON from './players.json';\r\nimport rookieJSON from './rookies.json';\r\nimport DataGrid,  { SelectColumn} from 'react-data-grid';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst MAX_TOUCHDOWNS = 48;\r\nconst PLAYER_COUNT = 6;\r\n\r\nconst stopEnterOnKeyDown = (e) => {\r\n  if (e.keyCode === 13) {\r\n    e.preventDefault();\r\n    return false;\r\n  }\r\n}\r\n\r\nconst getName = player => `${player.firstName} ${player.lastName}`;\r\n\r\nconst columns = [\r\n  SelectColumn,\r\n  { key: 'firstName', name: 'First name', sortable: true },\r\n  { key: 'lastName', name: 'Last name', sortable: true },\r\n  {\r\n    key: 'position',\r\n    name: 'Pos',\r\n    sortable: true,\r\n  },\r\n  {\r\n    key: 'team',\r\n    name: 'Team',\r\n    sortable: true\r\n  },\r\n  {\r\n    key: 'td',\r\n    name: 'TDs',\r\n    sortable: true\r\n  },\r\n];\r\n\r\nconst rookieColumns = [\r\n  SelectColumn,\r\n  { key: 'firstName', name: 'First name', sortable: true },\r\n  { key: 'lastName', name: 'Last name', sortable: true },\r\n  {\r\n    key: 'position',\r\n    name: 'Pos',\r\n    sortable: true\r\n  },\r\n  {\r\n    key: 'team',\r\n    name: 'Team',\r\n    sortable: true\r\n  },\r\n]\r\n\r\nconst Form = (props) => {\r\n  const [firstName, setFirstName] = useState('');\r\n  const [firstError, setFirstError] = useState(false);\r\n  const [lastName, setLastName] = useState('');\r\n  const [lastError, setLastError] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n  const [emailError, setEmailError] = useState(false);\r\n  const [teamName, setTeamName] = useState('');\r\n  const [teamNameError, setTeamNameError] = useState(false);\r\n  const [players, setPlayers] = useState(new Set());\r\n  const [rookies, setRookies] = useState(new Set());\r\n  const [playerError, setPlayerError] = useState('');\r\n\r\n  const selectedTotal = useMemo(() => {\r\n    let tds = 0;\r\n    for (const playerId of Array.from(players)) {\r\n      tds += playerJSON[playerId-1].td;\r\n    }\r\n    return tds;\r\n  }, [players])\r\n\r\n  const onFormSubmit = () => {\r\n    let error = false;\r\n    if (!firstName) {\r\n      setFirstError(true);\r\n      error = true;\r\n    }\r\n    if (!lastName) {\r\n      setLastError(true);\r\n      error = true;\r\n    }\r\n    if (!email) {\r\n      setEmailError(true);\r\n      error = true;\r\n    }\r\n\r\n    if (!teamName) {\r\n      setTeamNameError(true);\r\n      error = true;\r\n    }\r\n\r\n    if (players.size !== PLAYER_COUNT) {\r\n      setPlayerError(`You must select ${PLAYER_COUNT} players (you selected ${players.size})`);\r\n      error = true;\r\n    } else if (rookies.size !== 1) {\r\n      setPlayerError(`You must select 1 rookie (you selected ${rookies.size})`);\r\n      error = true;\r\n    } else {\r\n      if (selectedTotal > MAX_TOUCHDOWNS) {\r\n        setPlayerError(`Selected returning players had more than ${MAX_TOUCHDOWNS} TDs last season (your total is ${selectedTotal})`);\r\n        error = true;\r\n      }\r\n    }\r\n\r\n    if (error) {\r\n      return;\r\n    }\r\n\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n\r\n    const playerArray = Array.from(players);\r\n    const rookieArray = Array.from(rookies);\r\n    var urlencoded = new URLSearchParams();\r\n    urlencoded.append(\"entry.101112653\", firstName);\r\n    urlencoded.append(\"entry.2028247391\", lastName);\r\n    urlencoded.append(\"entry.840246629\", email);\r\n    urlencoded.append(\"entry.922791203\", teamName);\r\n    urlencoded.append(\"entry.242737050\", getName(playerJSON[playerArray[0] -1]));\r\n    urlencoded.append(\"entry.1346375085\",getName(playerJSON[playerArray[1] -1]));\r\n    urlencoded.append(\"entry.890699852\", getName(playerJSON[playerArray[2] -1]));\r\n    urlencoded.append(\"entry.1138431561\", getName(playerJSON[playerArray[3] -1]));\r\n    urlencoded.append(\"entry.1311230266\", getName(playerJSON[playerArray[4] -1]));\r\n    urlencoded.append(\"entry.1216679688\", getName(playerJSON[playerArray[5] -1]));\r\n    urlencoded.append(\"entry.1816541943\", getName(rookieJSON[rookieArray[0] - 143]));\r\n\r\n    var requestOptions = {\r\n      method: 'POST',\r\n      headers: myHeaders,\r\n      body: urlencoded,\r\n      redirect: 'follow',\r\n      mode: 'no-cors',\r\n      credentials: 'include'\r\n    };\r\n\r\n    fetch(\"https://docs.google.com/forms/d/e/1FAIpQLScObPyuHrMe66iKhHbEeQZ11Sr3moTk5Y69wLBppjB9-hyTqA/formResponse\", requestOptions)\r\n      .then(response => response.text())\r\n      .then(result => {\r\n        console.log(result)\r\n        props.setSubmitted(true);\r\n      })\r\n      .catch(error => console.log('error', error));\r\n  }\r\n\r\n  return (\r\n    <form className='appForm' onKeyDown={stopEnterOnKeyDown}>\r\n      <div className=\"formFields\">\r\n        <TextField\r\n          required\r\n          className=\"formField\"\r\n          label='First Name'\r\n          value={firstName}\r\n          onChange={(e) => {\r\n            setFirstName(e.target.value);\r\n            if (firstError) {\r\n              setFirstError(false);\r\n            }\r\n          }}\r\n          error={firstError}\r\n          helperText={firstError ? 'Required' : ''}\r\n        />\r\n        <TextField\r\n          required\r\n          className=\"formField\"\r\n          label='Last Name'\r\n          value={lastName}\r\n          onChange={(e) => {\r\n            setLastName(e.target.value);\r\n            if(lastError) {\r\n              setLastError(false);\r\n            }\r\n          }}\r\n          error={lastError}\r\n          helperText={lastError ? 'Required' : ''}\r\n         />\r\n        <TextField\r\n          required\r\n          className=\"formField\"\r\n          label='Email'\r\n          value={email}\r\n          onChange={(e) => {\r\n            setEmail(e.target.value);\r\n            if(emailError) {\r\n              setEmailError(false);\r\n            }\r\n          }}\r\n          error={emailError}\r\n          helperText={emailError ? 'Required' : ''}\r\n        />\r\n        <TextField\r\n          required\r\n          className=\"formField\"\r\n          label='Team Name'\r\n          value={teamName}\r\n          onChange={(e) => {\r\n            setTeamName(e.target.value);\r\n            if(teamNameError) {\r\n              setTeamNameError(false);\r\n            }\r\n          }}\r\n          error={teamNameError}\r\n          helperText={teamNameError ? 'Required' : ''}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"playerText\">\r\n        <span><b>Returning Players</b> (Pick {PLAYER_COUNT}, Max {MAX_TOUCHDOWNS} combined)</span>\r\n        <span><b>Selected TD Total:</b> {selectedTotal}</span>\r\n      </div>\r\n      <div className=\"dataGridWrapper\">\r\n        <DataGrid\r\n        rows={playerJSON}\r\n        columns={columns}\r\n        rowKeyGetter={row => row.id}\r\n        selectedRows={players}\r\n        onSelectedRowsChange={players => {\r\n          setPlayerError(false);\r\n          setPlayers(players);\r\n        }}\r\n        className=\"playerDataGrid\"\r\n         />\r\n      </div>\r\n\r\n      <div className=\"rookieText\">\r\n      <span><b>Rookies</b> (Pick 1)</span>\r\n      </div>\r\n      <div className=\"rookieGridWrapper\">\r\n        <DataGrid\r\n        rows={rookieJSON}\r\n        columns={rookieColumns}\r\n        rowKeyGetter={row => row.id}\r\n        selectedRows={rookies}\r\n        onSelectedRowsChange={rookies => {\r\n          setPlayerError(false);\r\n          setRookies(rookies);\r\n        }}\r\n        className=\"rookieDataGrid\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"formFooter\">\r\n        <div className=\"footerError\">{playerError}</div>\r\n        <Button className='submitButton' variant=\"contained\" color=\"primary\" onClick={onFormSubmit}>\r\n          Submit\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Form;\r\n","import './App.css';\r\nimport Form from './Form.jsx';\r\nimport {useState} from 'react'\r\n\r\nfunction Home() {\r\n  const [submitted, setSubmitted] = useState(false);\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        Pylon Pick 'Em\r\n      </header>\r\n      {submitted ? <div>Thank you for your submission!</div> : <Form setSubmitted={setSubmitted} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import './App.css';\nimport Home from './Home.jsx';\n\nfunction App() {\n  return (\n    <Home />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}