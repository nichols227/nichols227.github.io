{"version":3,"sources":["logo.svg","Form.jsx","App.js","reportWebVitals.js","index.js"],"names":["stopEnterOnKeyDown","e","keyCode","preventDefault","columns","field","headerName","width","type","Form","useState","firstName","setFirstName","firstError","setFirstError","lastName","setLastName","lastError","setLastError","email","setEmail","emailError","setEmailError","players","setPlayers","playerError","setPlayerError","className","onKeyDown","TextField","required","label","value","onChange","target","error","helperText","rows","playerJSON","rowsPerPage","onSelectionModelChange","selectionModel","checkboxSelection","hideFooterPagination","hideFooter","Button","variant","color","onClick","length","tds","playerId","td","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68aebbc5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import TextField from '@material-ui/core/TextField';\r\nimport {useState} from 'react'\r\nimport './Form.css'\r\nimport playerJSON from './players.json';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst MAX_TOUCHDOWNS = 50;\r\nconst PLAYER_COUNT = 5;\r\n\r\nconst stopEnterOnKeyDown = (e) => {\r\n  if (e.keyCode === 13) {\r\n    e.preventDefault();\r\n    return false;\r\n  }\r\n}\r\n\r\nconst columns = [\r\n  { field: 'firstName', headerName: 'First name', width: 130 },\r\n  { field: 'lastName', headerName: 'Last name', width: 130 },\r\n  {\r\n    field: 'position',\r\n    headerName: 'Pos',\r\n    width: 90,\r\n  },\r\n  {\r\n    field: 'team',\r\n    headerName: 'Team',\r\n    width: 200,\r\n  },\r\n  {\r\n    field: 'td',\r\n    headerName: 'TDs',\r\n    type: 'number',\r\n    width: 90,\r\n  },\r\n];\r\n\r\nconst Form = () => {\r\n  const [firstName, setFirstName] = useState('');\r\n  const [firstError, setFirstError] = useState(false);\r\n  const [lastName, setLastName] = useState('');\r\n  const [lastError, setLastError] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n  const [emailError, setEmailError] = useState(false);\r\n  const [players, setPlayers] = useState([]);\r\n  const [playerError, setPlayerError] = useState('');\r\n\r\n  const onFormSubmit = () => {\r\n    let error = false;\r\n    if (!firstName) {\r\n      setFirstError(true);\r\n      error = true;\r\n    }\r\n    if (!lastName) {\r\n      setLastError(true);\r\n      error = true;\r\n    }\r\n    if (!email) {\r\n      setEmailError(true);\r\n      error = true;\r\n    }\r\n\r\n    if (players.length !== PLAYER_COUNT) {\r\n      setPlayerError(`You must select ${PLAYER_COUNT} players`);\r\n      error = true;\r\n    } else {\r\n      let tds = 0;\r\n      for (const playerId of players) {\r\n        tds += playerJSON[playerId].td;\r\n      }\r\n\r\n      if (tds > MAX_TOUCHDOWNS) {\r\n        setPlayerError(`Selected players had more than ${MAX_TOUCHDOWNS} TDs last season`);\r\n        error = true;\r\n      }\r\n    }\r\n\r\n    if (error) {\r\n      return;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form className='appForm' onKeyDown={stopEnterOnKeyDown}>\r\n      <div className=\"formFields\">\r\n        <TextField\r\n          required\r\n          className=\"formField\"\r\n          label='First Name'\r\n          value={firstName}\r\n          onChange={(e) => {\r\n            setFirstName(e.target.value);\r\n            if (firstError) {\r\n              setFirstError(false);\r\n            }\r\n          }}\r\n          error={firstError}\r\n          helperText={firstError ? 'Required' : ''}\r\n        />\r\n        <TextField\r\n          required\r\n          className=\"formField\"\r\n          label='Last Name'\r\n          value={lastName}\r\n          onChange={(e) => {\r\n            setLastName(e.target.value);\r\n            if(lastError) {\r\n              setLastError(false);\r\n            }\r\n          }}\r\n          error={lastError}\r\n          helperText={lastError ? 'Required' : ''}\r\n         />\r\n        <TextField\r\n          required\r\n          className=\"formField\"\r\n          label='Email'\r\n          value={email}\r\n          onChange={(e) => {\r\n            setEmail(e.target.value);\r\n            if(email) {\r\n              setEmailError(false);\r\n            }\r\n          }}\r\n          error={emailError}\r\n          helperText={emailError ? 'Required' : ''}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"dataGrid\">\r\n        <DataGrid\r\n        rows={playerJSON}\r\n        columns={columns}\r\n        rowsPerPage={1000}\r\n        onSelectionModelChange={({selectionModel}) => {\r\n          setPlayers(selectionModel)\r\n          if (playerError) {\r\n            setPlayerError('');\r\n          }\r\n        }}\r\n        checkboxSelection\r\n        hideFooterPagination\r\n         hideFooter/>\r\n      </div>\r\n\r\n      <div className=\"formFooter\">\r\n        <div className=\"footerError\">{playerError}</div>\r\n        <Button className='submitButton' variant=\"contained\" color=\"primary\" onClick={onFormSubmit}>\r\n          Submit\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Form;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Form from './Form.jsx';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        Josh's Football Home Run Derby\n      </header>\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}